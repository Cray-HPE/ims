{{/*
MIT License

(C) Copyright 2021-2023 Hewlett Packard Enterprise Development LP

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
*/}}
apiVersion: v1
data:
  image_configmap_create.yaml.template: |
    ---
    kind: ConfigMap
    apiVersion: v1
    metadata:
      name: cray-ims-$id-configmap
      namespace: $namespace
    data:
      public_key:
        $public_key
      template_dictionary: |
        $template_dictionary
  image_service_create.yaml.template: |
    ---
    kind: Service
    apiVersion: v1
    metadata:
      name: cray-ims-$id-service
      namespace: $namespace
      annotations:
        external-dns.alpha.kubernetes.io/hostname: $hostname
        metallb.universe.tf/address-pool: $address_pool
    spec:
      selector:
        app: ims-$id-create
      type: LoadBalancer
      ports:
      - port: 22
        protocol: TCP
        targetPort: 22
  image_job_create.yaml.template: |
    ---
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: cray-ims-$id-create
      namespace: $namespace
    spec:
      backoffLimit: 0
      template:
        metadata:
          labels:
            app: ims-$id-create
        spec:
          runtimeClassName: $runtime_class
          serviceAccountName: $service_account
          restartPolicy: Never  # Don't ever restart this job
          initContainers:
          # Step 1: Download and extract the image recipe archive
          - image: {{ .Values.cray_ims_utils.image.repository }}:{{ .Values.cray_ims_utils.image.tag }}
            imagePullPolicy: {{ .Values.cray_ims_utils.image.imagePullPolicy }}
            name: fetch-recipe
            env:
            - name: API_GATEWAY_HOSTNAME
              value: {{ .Values.api_gw.api_gw_service_name }}.{{ .Values.api_gw.api_gw_service_namespace }}.svc.cluster.local
            - name: CA_CERT
              value: /etc/cray/ca/certificate_authority.crt
            - name: OAUTH_CONFIG_DIR
              value: '/etc/admin-client-auth'
            - name: IMS_JOB_ID
              value: "$id"
            - name: DOWNLOAD_MD5SUM
              value: "$download_md5sum"
            envFrom:
            - configMapRef:
                name: cray-ims-$id-configmap
            volumeMounts:
            - name: recipe-vol
              mountPath: /mnt/recipe
            - name: ca-pubkey
              mountPath: /etc/cray/ca
              readOnly: true
            - name: admin-client-auth
              mountPath: '/etc/admin-client-auth'
              readOnly: true
            - name: template-dictionary
              mountPath: /etc/cray
              readOnly: true
            command: [ "sh", "-ce", "/scripts/fetch-recipe.sh /mnt/recipe \"$download_url\"" ]
            resources:
              requests:
                memory: "$size_gb"
                cpu: "500m"
              limits:
                memory: "$limit_gb"
                cpu: "8"
          # Step 2: Wait for Repos
          - image: {{ .Values.cray_ims_utils.image.repository }}:{{ .Values.cray_ims_utils.image.tag }}
            imagePullPolicy: {{ .Values.cray_ims_utils.image.imagePullPolicy }}
            name: wait-for-repos
            env:
            - name: CA_CERT
              value: /etc/cray/ca/certificate_authority.crt
            - name: RECIPE_ROOT_PARENT
              value: /mnt/recipe
            - name: IMS_JOB_ID
              value: "$id"
            - name: OAUTH_CONFIG_DIR
              value: '/etc/admin-client-auth'
            volumeMounts:
            - name: recipe-vol
              mountPath: /mnt/recipe
              readOnly: true
            - name: ca-pubkey
              mountPath: /etc/cray/ca
              readOnly: true
            - name: admin-client-auth
              mountPath: '/etc/admin-client-auth'
              readOnly: true
            command: [ "sh", "-ce", "/scripts/wait_for_kiwi_repos.py" ]
            resources:
              requests:
                memory: "$size_gb"
                cpu: "500m"
              limits:
                memory: "$limit_gb"
                cpu: "8"
          # Step 3: Build a RPM containing the Cray Root CA certificate
          - image: {{ .Values.cray_ims_utils.image.repository }}:{{ .Values.cray_ims_utils.image.tag }}
            imagePullPolicy: {{ .Values.cray_ims_utils.image.imagePullPolicy }}
            name: build-ca-rpm
            env:
            - name: API_GATEWAY_HOSTNAME
              value: {{ .Values.api_gw.api_gw_service_name }}.{{ .Values.api_gw.api_gw_service_namespace }}.svc.cluster.local
            - name: CA_CERT
              value: /etc/cray/ca/certificate_authority.crt
            - name: OAUTH_CONFIG_DIR
              value: '/etc/admin-client-auth'
            - name: IMS_JOB_ID
              value: "$id"
            - name: BUILD_ARCH
              value: "$job_arch"
            volumeMounts:
            - name: ca-rpm-vol
              mountPath: /mnt/ca-rpm
            - name: specfile-vol
              mountPath: /mnt/specfile
              readOnly: true
            - name: ca-pubkey
              mountPath: /etc/cray/ca
              readOnly: true
            - name: admin-client-auth
              mountPath: '/etc/admin-client-auth'
              readOnly: true
            command: [ "/scripts/build_ca_rpm.py" ]
            resources:
              requests:
                memory: "$size_gb"
                cpu: "500m"
              limits:
                memory: "$limit_gb"
                cpu: "8"
          # Step 4: Build the image
          - image: {{ .Values.cray_ims_kiwi_ng_opensuse_x86_64_builder.image.repository }}:{{ .Values.cray_ims_kiwi_ng_opensuse_x86_64_builder.image.tag }}
            imagePullPolicy: {{ .Values.cray_ims_kiwi_ng_opensuse_x86_64_builder.image.imagePullPolicy }}
            name: build-image
            resources:
              requests:
                memory: "$size_gb"
                cpu: "500m"
              limits:
                memory: "$limit_gb"
                cpu: "48"
            securityContext:
              privileged: true
              capabilities:
                add: [$security_capabilites]
            env:
            - name: API_GATEWAY_HOSTNAME
              value: {{ .Values.api_gw.api_gw_service_name }}.{{ .Values.api_gw.api_gw_service_namespace }}.svc.cluster.local
            - name: CA_CERT
              value: /etc/cray/ca/certificate_authority.crt
            - name: OAUTH_CONFIG_DIR
              value: '/etc/admin-client-auth'
            - name: ENABLE_DEBUG
              value: '$enable_debug'
            - name: RECIPE_ROOT_PARENT
              value: /mnt/recipe
            - name: IMAGE_ROOT_PARENT
              value: /mnt/image
            - name: IMS_JOB_ID
              value: "$id"
            - name: JOB_ENABLE_DKMS
              value: "$job_enable_dkms"
            - name: BUILD_ARCH
              value: "$job_arch"
            - name: IMS_ARM_BUILDER
              value: "{{ .Values.cray_ims_kiwi_ng_opensuse_x86_64_builder.image.repository }}:{{ .Values.cray_ims_kiwi_ng_opensuse_x86_64_builder.image.tag }}-arm64"
            volumeMounts:
            - name: recipe-vol
              mountPath: /mnt/recipe
              readOnly: true
            - name: image-vol
              mountPath: /mnt/image
            - name: ca-rpm-vol
              mountPath: /mnt/ca-rpm
              readOnly: true
            - name: ca-pubkey
              mountPath: /etc/cray/ca
              readOnly: true
            - name: admin-client-auth
              mountPath: '/etc/admin-client-auth'
              readOnly: true
          containers:
          - image: {{ .Values.cray_ims_utils.image.repository }}:{{ .Values.cray_ims_utils.image.tag }}
            imagePullPolicy: {{ .Values.cray_ims_utils.image.imagePullPolicy }}
            name: buildenv-sidecar
            command: ["sh", "-ce", "/scripts/buildenv-sidecar.sh /mnt/image"]
            resources:
              requests:
                memory: "$size_gb"
                cpu: "500m"
              limits:
                memory: "$limit_gb"
                cpu: "48"
            envFrom:
            - configMapRef:
                name: cray-ims-$id-configmap
            env:
            - name: API_GATEWAY_HOSTNAME
              value: {{ .Values.api_gw.api_gw_service_name }}.{{ .Values.api_gw.api_gw_service_namespace }}.svc.cluster.local
            - name: CA_CERT
              value: /etc/cray/ca/certificate_authority.crt
            - name: OAUTH_CONFIG_DIR
              value: '/etc/admin-client-auth'
            - name: ENABLE_DEBUG
              value: '$enable_debug'
            - name: IMS_ACTION
              value: create
            - name: SERVICE_NAME
              value: cray-ims-$id-service
            - name: IMAGE_ROOT_PARENT
              value: /mnt/image
            - name: IMAGE_ROOT_ARCHIVE_NAME
              value: $image_root_archive_name
            - name: KERNEL_FILENAME
              value: $kernel_filename
            - name: INITRD_FILENAME
              value: $initrd_filename
            - name: KERNEL_PARAMETERS_FILENAME
              value: $kernel_parameters_filename
            - name: IMS_JOB_ID
              value: "$id"
            - name: SSH_JAIL
              value: "$ssh_jail"
            - name: BUILD_ARCH
              value: "$job_arch"
            - name: S3_BUCKET
              value: "$s3_bucket"
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: ims-s3-credentials
                  key: access_key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ims-s3-credentials
                  key: secret_key
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: ims-s3-credentials
                  key: s3_endpoint
            - name: S3_SSL_VALIDATE
              valueFrom:
                secretKeyRef:
                  name: ims-s3-credentials
                  key: ssl_validate
            volumeMounts:
            - name: image-vol
              mountPath: /mnt/image
            - name: ims-config-vol
              mountPath: /etc/cray/ims
            - name: ca-pubkey
              mountPath: /etc/cray/ca
              readOnly: true
            - name: ssh-pubkey
              mountPath: /etc/cray
              readOnly: true
            - name: admin-client-auth
              mountPath: '/etc/admin-client-auth'
              readOnly: true
          # sshd container
          - image: {{ .Values.cray_ims_sshd.image.repository }}:{{ .Values.cray_ims_sshd.image.tag }}
            imagePullPolicy: {{ .Values.cray_ims_sshd.image.imagePullPolicy }}
            securityContext:
              privileged: $security_privilege
              capabilities:
                add: [$security_capabilites]
            name: sshd
            ports:
            - containerPort: 22
            envFrom:
            - configMapRef:
                name: cray-ims-$id-configmap
            env:
            - name: API_GATEWAY_HOSTNAME
              value: {{ .Values.api_gw.api_gw_service_name }}.{{ .Values.api_gw.api_gw_service_namespace }}.svc.cluster.local
            - name: CA_CERT
              value: /etc/cray/ca/certificate_authority.crt
            - name: ENABLE_DEBUG
              value: '$enable_debug'
            - name: IMS_ACTION
              value: create
            - name: IMAGE_ROOT_PARENT
              value: /mnt/image
            - name: SSHD_OPTIONS
              value: "-E /etc/cray/ims/sshd.log -f /etc/cray/ims/sshd_config"
            - name: IMS_JOB_ID
              value: "$id"
            - name: SSH_JAIL
              value: "$ssh_jail"
            - name: JOB_ENABLE_DKMS
              value: "$job_enable_dkms"
            volumeMounts:
            - name: image-vol
              mountPath: /mnt/image
            - name: ims-config-vol
              mountPath: /etc/cray/ims
            - name: ca-pubkey
              mountPath: /etc/cray/ca
              readOnly: true
            resources:
              requests:
                memory: "$size_gb"
                cpu: "500m"
              limits:
                memory: "$limit_gb"
                cpu: "8"
          volumes:
          - name: image-vol
            emptyDir: {}
          - name: recipe-vol
            emptyDir: {}
          - name: specfile-vol
            configMap:
              name: ims-ca-rpm-specfile
          - name: ca-rpm-vol
            emptyDir: {}
          - name: ims-config-vol
            emptyDir: {}
          - name: ca-pubkey
            configMap:
              name: cray-configmap-ca-public-key
          - name: ssh-pubkey
            configMap:
              name: cray-ims-$id-configmap
              items:
              - key: public_key
                path: authorized_keys
          - name: template-dictionary
            configMap:
              name: cray-ims-$id-configmap
              items:
              - key: template_dictionary
                path: template_dictionary
          - name: admin-client-auth
            secret:
              secretName: "{{ .Values.keycloak.keycloak_admin_client_auth_secret_name }}"
kind: ConfigMap
metadata:
  name: cray-configmap-ims-v2-image-create-kiwi-ng
  namespace: {{ .Values.ims_config.cray_ims_service_namespace }}
