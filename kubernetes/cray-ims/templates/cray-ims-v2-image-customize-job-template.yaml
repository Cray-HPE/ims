{{/*
MIT License

(C) Copyright 2021-2024 Hewlett Packard Enterprise Development LP

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

NOTE: Kata hypevisor setup adds ALL container cpu limits together for
  the hardware description.  This changes the nproc return of available
  cpus in the container, possibly overloading the VM causing it to
  crash. Be careful adjusting any cpu limits for the containers.
*/}}
apiVersion: v1
data:
  image_configmap_customize.yaml.template: |
    ---
    kind: ConfigMap
    apiVersion: v1
    metadata:
      name: cray-ims-$id-configmap
      namespace: $namespace
    data:
      public_key:
        $public_key
  image_service_customize.yaml.template: |
    ---
    kind: Service
    apiVersion: v1
    metadata:
      name: cray-ims-$id-service
      namespace: $namespace
      annotations:
        external-dns.alpha.kubernetes.io/hostname: $hostname
        metallb.universe.tf/address-pool: $address_pool
    spec:
      selector:
        app: ims-$id-customize
      type: LoadBalancer
      ports:
      - port: 22
        protocol: TCP
        targetPort: 22
  image_pvc_customize.yaml.template: |
    ---
    kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: cray-ims-$id-job-claim
      namespace: $namespace
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "$pvc_gb"
  image_job_customize.yaml.template: |
    ---
    apiVersion: batch/v1
    kind: Job
    metadata:
      name: cray-ims-$id-customize
      namespace: $namespace
    spec:
      backoffLimit: 0
      template:
        metadata:
          annotations:
            io.katacontainers.config.hypervisor.virtio_fs_extra_args: '["-o", "xattr"]'
          labels:
            app: ims-$id-customize
            app.kubernetes.io/name: ims-job
        spec:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  topologyKey: kubernetes.io/hostname
                  labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values:
                        - ims-job
                    namespaces:
                      - $namespace
          runtimeClassName: $runtime_class
          serviceAccountName: $service_account
          restartPolicy: Never  # Don't ever restart this job
          initContainers:
          # Step 1: Download and extract the image root filesystem
          - image: {{ .Values.cray_ims_utils.image.repository }}:{{ .Values.cray_ims_utils.image.tag }}
            imagePullPolicy: {{ .Values.cray_ims_utils.image.imagePullPolicy }}
            name: prepare
            env:
            - name: API_GATEWAY_HOSTNAME
              value: {{ .Values.api_gw.api_gw_service_name }}.{{ .Values.api_gw.api_gw_service_namespace }}.svc.cluster.local
            - name: CA_CERT
              value: /etc/cray/ca/certificate_authority.crt
            - name: OAUTH_CONFIG_DIR
              value: '/etc/admin-client-auth'
            - name: IMS_JOB_ID
              value: "$id"
            - name: SSH_JAIL
              value: "$ssh_jail"
            - name: DOWNLOAD_MD5SUM
              value: "$download_md5sum"
            - name: JOB_ENABLE_DKMS
              value: "$job_enable_dkms"
            - name: BUILD_ARCH
              value: "$job_arch"
            - name: REMOTE_BUILD_NODE
              value: '$remote_build_node'
            - name: IMAGE_ROOT_PARENT
              value: /mnt/image
            - name: IMS_SSHD_IMAGE
              value: {{ .Values.cray_ims_sshd.image.repository }}:{{ .Values.cray_ims_sshd.image.tag }}
            volumeMounts:
            - name: image-vol
              mountPath: /mnt/image
            - name: ca-pubkey
              mountPath: /etc/cray/ca
              readOnly: true
            - name: admin-client-auth
              mountPath: '/etc/admin-client-auth'
              readOnly: true
            - name: remote-key
              mountPath: /etc/cray/remote-keys
              readOnly: true
            command: [ "sh", "-c", "chown -R 65534:65534 /mnt/image && /scripts/prep-env.sh /mnt/image \"$download_url\"" ]
            resources:
              requests:
                memory: "$job_mem_size"
                cpu: "500m"
              limits:
                memory: "$job_mem_limit"
                cpu: "4" # NOTE: see comment at top of the file
            securityContext:
              runAsUser: 65534
              runAsGroup: 65534
          # User customization of image root
          containers:
          - image: {{ .Values.cray_ims_utils.image.repository }}:{{ .Values.cray_ims_utils.image.tag }}
            imagePullPolicy: {{ .Values.cray_ims_utils.image.imagePullPolicy }}
            name: buildenv-sidecar
            command: ["sh", "-ce", "/scripts/buildenv-sidecar.sh /mnt/image"]
            resources:
              requests:
                memory: "$job_mem_size"
                cpu: "500m"
              limits:
                memory: "$job_mem_limit"
                cpu: "8" # NOTE: see comment at top of the file
            env:
            - name: API_GATEWAY_HOSTNAME
              value: {{ .Values.api_gw.api_gw_service_name }}.{{ .Values.api_gw.api_gw_service_namespace }}.svc.cluster.local
            - name: CA_CERT
              value: /etc/cray/ca/certificate_authority.crt
            - name: OAUTH_CONFIG_DIR
              value: '/etc/admin-client-auth'
            - name: ENABLE_DEBUG
              value: '$enable_debug'
            - name: IMS_ACTION
              value: customize
            - name: SERVICE_NAME
              value: cray-ims-$id-service
            - name: IMAGE_ROOT_PARENT
              value: /mnt/image
            - name: IMAGE_ROOT_ARCHIVE_NAME
              value: $image_root_archive_name
            - name: KERNEL_FILENAME
              value: $kernel_filename
            - name: INITRD_FILENAME
              value: $initrd_filename
            - name: KERNEL_PARAMETERS_FILENAME
              value: $kernel_parameters_filename
            - name: IMS_JOB_ID
              value: "$id"
            - name: SSH_JAIL
              value: "$ssh_jail"
            - name: BUILD_ARCH
              value: "$job_arch"
            - name: REMOTE_BUILD_NODE
              value: '$remote_build_node'
            - name: S3_BUCKET
              value: "$s3_bucket"
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: ims-s3-credentials
                  key: access_key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ims-s3-credentials
                  key: secret_key
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: ims-s3-credentials
                  key: s3_endpoint
            - name: S3_SSL_VALIDATE
              valueFrom:
                secretKeyRef:
                  name: ims-s3-credentials
                  key: ssl_validate
            volumeMounts:
            - name: image-vol
              mountPath: /mnt/image
            - name: ims-config-vol
              mountPath: /etc/cray/ims
            - name: ca-pubkey
              mountPath: /etc/cray/ca
              readOnly: true
            - name: remote-key
              mountPath: /etc/cray/remote-keys
              readOnly: true
            - name: ssh-pubkey
              mountPath: /etc/cray
              readOnly: true
            - name: admin-client-auth
              mountPath: '/etc/admin-client-auth'
              readOnly: true
          # sshd container
          - image: {{ .Values.cray_ims_sshd.image.repository }}:{{ .Values.cray_ims_sshd.image.tag }}
            imagePullPolicy: {{ .Values.cray_ims_sshd.image.imagePullPolicy }}
            securityContext:
              privileged: $security_privilege
              capabilities:
                add: [$security_capabilities]
            name: sshd
            ports:
            - containerPort: 22
            env:
            - name: API_GATEWAY_HOSTNAME
              value: {{ .Values.api_gw.api_gw_service_name }}.{{ .Values.api_gw.api_gw_service_namespace }}.svc.cluster.local
            - name: CA_CERT
              value: /etc/cray/ca/certificate_authority.crt
            - name: ENABLE_DEBUG
              value: '$enable_debug'
            - name: IMS_ACTION
              value: customize
            - name: IMAGE_ROOT_PARENT
              value: /mnt/image
            - name: SSHD_OPTIONS
              value: "-E /etc/cray/ims/sshd.log -f /etc/cray/ims/sshd_config"
            # If the -f options is specified in SSHD_OPTIONS, the value of SSHD_CONFIG_FILE must match in order for the ssh jail to be setup correctly.
            # SSHD_CONFIG_FILE is only used for writing to the sshd config file, and is not passed to sshd unless specified in SSHD_OPTIONS.
            - name: SSHD_CONFIG_FILE
              value: "/etc/cray/ims/sshd_config"
            - name: IMS_JOB_ID
              value: "$id"
            - name: SSH_JAIL
              value: "$ssh_jail"
            - name: JOB_ENABLE_DKMS
              value: "$job_enable_dkms"
            - name: BUILD_ARCH
              value: "$job_arch"
            - name: REMOTE_BUILD_NODE
              value: '$remote_build_node'
            resources:
              requests:
                memory: "$job_mem_size"
                cpu: "500m"
              limits:
                memory: "$job_mem_limit"
                cpu: "8" # NOTE: see comment at top of the file
            volumeMounts:
            - name: image-vol
              mountPath: /mnt/image
            - name: ims-config-vol
              mountPath: /etc/cray/ims
            - name: ca-pubkey
              mountPath: /etc/cray/ca
              readOnly: true
            - name: remote-key
              mountPath: /etc/cray/remote-keys
              readOnly: true
          volumes:
          - name: image-vol
            persistentVolumeClaim:
              claimName: cray-ims-$id-job-claim
          - name: ims-config-vol
            emptyDir: {}
          - name: ca-pubkey
            configMap:
              name: cray-configmap-ca-public-key
          - name: ssh-pubkey
            configMap:
              name: cray-ims-$id-configmap
              items:
              - key: public_key
                path: authorized_keys
          - name: remote-key
            configMap:
              name: cray-ims-remote-keys
              items:
              - key: private_key
                path: id_ecdsa
          - name: admin-client-auth
            secret:
              secretName: "{{ .Values.keycloak.keycloak_admin_client_auth_secret_name }}"
kind: ConfigMap
metadata:
  name: cray-configmap-ims-v2-image-customize
  namespace: {{ .Values.ims_config.cray_ims_service_namespace }}
